@inject NavigationManager NavigationManager
@implements IDisposable


@using BlazorWEB.Pages;

<Csscontrol></Csscontrol>

<style>
    a {
        padding:0px;
    }

    a:hover {
        background-color: blue;
            padding: 1px;
        }

    .navbar1 {
        z-index:4;
        overflow:hidden;
        min-width:100%;
        position:fixed;
        top:0em;
        margin: 0em 0em 1em 0em;
        background-image: var(--GradientBody);
        transform:scaleY(1.2);
        
       

    }

    .navbar1 a {
        float:left;
        color:var(--TextColor);
        padding: 0px 5px;
        text-decoration:none;
            user-select: none;
    }

</style>


<div >
    <div class ="navbar1">

        <a style=@Style("LangSetup") href="LangSetup">SPRÅK</a>
        <a style=@Style("SimpleList") href ="SimpleList">ORD</a>
        <a style=@Style("Scroll") href ="Scroll">PUGG</a>
        <a style=@Style("ScrollList") href="ScrollList">LISTE</a>
        <a style=@Style("Help") href ="Help">HJELP</a>

    </div>


</div>


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected async override Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += LocationChanged;
        await Task.Delay(1);
    }
    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= LocationChanged;
    }

    string Style(string pageCurr)
    {
        if (page == pageCurr)
            return "color:yellow;text-decoration:underline;";
        return "";
    }


    static string GetPage(string location)
    {
        string[] a = location.Split(@"/");
        string? s = a.LastOrDefault();
        return s ?? "";
    }
    static string page = "";
    void LocationChanged(object ? sender, LocationChangedEventArgs e)
    {
        page = GetPage(e.Location);

        string navigationMethod = e.IsNavigationIntercepted ? "HTML" : "code";
        System.Diagnostics.Debug.WriteLine($"Notified of navigation via {navigationMethod} to {e.Location}");

        StateHasChanged();
    }
}
